<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        ">
 <context:annotation-config />
 <mvc:annotation-driven ></mvc:annotation-driven>
<!--数据库的配置-->
 <context:property-placeholder location="classpath*:jdbc.properties" ></context:property-placeholder>
 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" init-method="init"  >
   <property name="driverClassName" value="${spring.datasource.driver-class-name}" />
    <property name="username" value="${spring.datasource.username}" />
    <property name="password" value="${spring.datasource.password}" />
    <property name="url" value="${spring.datasource.url}"/>
 <!--  &lt;!&ndash; 连接只读数据库时配置为true， 保证安全 &ndash;&gt;
   <property name="readOnly" value="false" />
   &lt;!&ndash; 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 &ndash;&gt;
   <property name="connectionTimeout" value="30000" />
   &lt;!&ndash; 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 &ndash;&gt;
   <property name="idleTimeout" value="600000" />
   &lt;!&ndash; 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） &ndash;&gt;
   <property name="maxLifetime" value="1800000" />
   &lt;!&ndash; 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) &ndash;&gt;
   <property name="maximumPoolSize" value="15" />-->
     <!-- 初始化连接大小 -->
     <property name="initialSize" value="0" />
     <!-- 连接池最大使用连接数量 -->
     <property name="maxActive" value="1500" />
     <!-- 连接池最小空闲 -->
     <property name="minIdle" value="0" />
     <!-- 获取连接最大等待时间 -->
     <property name="maxWait" value="60000" />
 </bean>
 <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
 <bean name="beetlSqlScannerConfigurer" class="org.beetl.sql.ext.spring4.BeetlSqlScannerConfigurer">
  <!-- 哪些类可以自动注入 -->
  <!--<property name="basePackage" value="org.beetl.sql.ext.spring4"/>-->
  <property name="basePackage" value="com.urp" />
  <!-- 通过类后缀 来自动注入Dao -->
  <property name="daoSuffix" value="Dao"/>
  <property name="sqlManagerFactoryBeanName" value="sqlManagerFactoryBean"/>
 </bean>
 <bean id="sqlManagerFactoryBean" class="org.beetl.sql.ext.spring4.SqlManagerFactoryBean">
  <property name="cs" >
   <bean  class="org.beetl.sql.ext.spring4.BeetlSqlDataSource">
    <property name="masterSource" ref="dataSource"></property>
   </bean>
  </property>
  <property name="dbStyle">
   <bean class="org.beetl.sql.core.db.MySqlStyle"/>
  </property>
  <property name="sqlLoader">
   <bean class="org.beetl.sql.core.ClasspathLoader">
    <property name="sqlRoot" value="/sql"></property>
   </bean>
  </property>
  <property name="nc">
   <bean class="org.beetl.sql.core.UnderlinedNameConversion"/>
  </property>
  <property name="interceptors">
   <list>
    <bean class="org.beetl.sql.ext.DebugInterceptor"></bean>
   </list>
  </property>
 </bean>

 <!--配置事务-->
 <bean id="txManager"
       class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  <property name="dataSource" ref="dataSource" />
 </bean>
 <context:annotation-config />
 <tx:annotation-driven transaction-manager="txManager" />

 <!--全局异常的配置-->
<!-- <bean id="exceptionResolver" class="com.urp.exception.CustomErrorController">
  <property name="defaultErrorView" value="/error.jsp" />
  <property name="exceptionMappings">
   <props>
    <prop key="com.urp.exception.PlatformException">/error</prop>
    <prop key="java.io.IOException">outException</prop>
   </props>
  </property>
  <property name="exceptionAttribute" value="ex"></property>
 </bean>-->
</beans>